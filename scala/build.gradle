buildDir = '/dev/shm/gradle-scala/scala'

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.github.maiflai:gradle-scalatest:0.13'
    }
}

apply plugin: 'scala'
apply plugin: 'com.github.maiflai.scalatest'  // this plugin enables the use of scalatest in a gradle scala project
def scalaVersion = '2.11.8'

version = '0.2'

tasks.withType(ScalaCompile) {
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = '2g'
        jvmArgs = ['-Xmx1g']
    }
    scalaCompileOptions.additionalParameters = [
            // this is a box of recommended warnings. If you can be -Xlint clean, it's a good idea to stay that way.
            "-Xlint",
            "-language:postfixOps",    // so that we can use tuple _2
            "-feature",
            "-unchecked",              // turns on verbose warnings about dangerous casts
            // a Scala 2.11 only option, catches a few more things than IDEA's unused import warnings. DO NOT manually
            //   remove imports even if the code still compiles (because of the implicit thingy).
            "-Ywarn-unused-import",
            // javap -cp ... -verbose package.MyClass to check if it's java 8 byte code
            "-Ybackend:GenBCode", "-Ydelambdafy:method", "-target:jvm-1.8"
    ]
}

dependencies {
    compile "org.scala-lang:scala-compiler:$scalaVersion"
    compile "org.scala-lang:scala-library:$scalaVersion"

    testCompile "org.scalatest:scalatest_2.11:2.2.+"
    testRuntime "org.pegdown:pegdown:1.+"                 // to create html test report
}